{"version":3,"sources":["images/cryptocurrency.jpg","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","loader","Homepage","Typography","data","isFetching","globalStats","stats","Loader","span","title","value","total","millify","totalMarkets","totalExchanges","totalMarketCap","total24hVolume","simplified","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Option","Select","demoImage","News","setNewsCategory","cryptoNews","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","i","xs","sm","lg","hoverable","href","target","rel","strong","length","substring","style","maxWidth","maxHeight","alt","image","thumbnail","contentUrl","description","provider","moment","datePublished","startOf","fromNow","Exchanges","Panel","Collapse","exchangesList","setExchangesList","exchangeName","setExchangeName","filteredData","exchanges","filter","exchange","includes","e","ex","showArrow","header","rank","iconUrl","volume","numberOfMarkets","marketShare","HTMLReactParser","id","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","currency","extra","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.033c29d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.ec6a2696.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport { Button, Menu, Typography, Avatar } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined, } from '@ant-design/icons'\r\n\r\nimport icon from '../images/cryptocurrency.jpg'\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true)\r\n    const [screenSize, setScreenSize] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth)\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        handleResize()\r\n\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false)\r\n        } else {\r\n            setActiveMenu(true)\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={1} className=\"logo\"><Link to=\"/\">Cryptoland</Link></Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst baseUrl = process.env.REACT_APP_CRYPTO_API_URL\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n}\r\n\r\nconst createRequest = (url) => ({\r\n    url, headers: cryptoApiHeaders\r\n})\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: \"cryptoApi\",\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest(`/exchanges`)\r\n        }),\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery\r\n} = cryptoApi","import { Spin } from 'antd'\r\nimport React from 'react'\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spin />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default loader\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies, News } from '../components'\r\nimport Loader from './Loader'\r\nconst Homepage = () => {\r\n    const { Title } = Typography\r\n\r\n    const { data, isFetching } = useGetCryptosQuery(10)\r\n    const globalStats = data?.data?.stats\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className='heading'>Global Crypto Stats</Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats?.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats?.totalMarkets)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats?.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats?.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats?.total24hVolume)} /></Col>\r\n            </Row>\r\n\r\n            <div className='home-heading-container'>\r\n                <Title level={2} className='home-title'>Top 10 Cryptocurrencies in the Market</Title>\r\n                <Title level={3} className='show-more'><Link to='/cryptocurrencies'>Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className='home-heading-container'>\r\n                <Title level={2} className='home-title'>Latest News of Cryptocurrencies</Title>\r\n                <Title level={3} className='show-more'><Link to='/news'>Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst baseUrl = process.env.REACT_APP_NEWS_API_URL\r\n\r\nconst cryptoNewsApiHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\r\n}\r\n\r\nconst createRequest = (url) => ({\r\n    url, headers: cryptoNewsApiHeaders\r\n})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: \"cryptoNewsApi\",\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery\r\n} = cryptoNewsApi","import React, { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\nconst { Text } = Typography;\r\n\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News'\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n\r\n    const count = simplified ? 6 : 12\r\n    const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({ newsCategory, count })\r\n\r\n    const { data } = useGetCryptosQuery(100)\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    if (!cryptoNews?.value && !isFetching) return 'No News at the Moment, Please Try Again Later!'\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Cryptocurrency\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map(coin => <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )\r\n            }\r\n            {\r\n                cryptoNews?.value.map((news, i) => (\r\n                    <Col xs={24} sm={12} lg={8} key={i}>\r\n                        <Card className=\"news-card\" hoverable>\r\n                            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                <div className=\"news-image-container\">\r\n                                    <Text className=\"news-title\" strong>{\r\n                                        news.name.length > 100\r\n                                            ? `${news.name.substring(0, 100)} ... `\r\n                                            : news.name\r\n                                    }</Text>\r\n                                    <img style={{ maxWidth: '200px', maxHeight: '100px' }} alt=\"news\" src={news?.image?.thumbnail?.contentUrl || demoImage} />\r\n                                </div>\r\n                                <p>\r\n                                    {\r\n                                        news.description.length > 100\r\n                                            ? `${news.description.substring(0, 100)} ... `\r\n                                            : news.description\r\n                                    }\r\n                                </p>\r\n                                <div className=\"provider-container\">\r\n                                    <Avatar src={news?.provider[0]?.image?.thumbnail?.contentUrl || demoImage} />\r\n                                    <Text className=\"provider-name\">{news.provider[0].name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default News","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Collapse, Typography, Avatar, Input } from 'antd'\r\nimport millify from 'millify'\r\nimport HTMLReactParser from 'html-react-parser'\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\nconst Exchanges = () => {\r\n    const { Panel } = Collapse;\r\n    const { Text } = Typography;\r\n\r\n    const [exchangesList, setExchangesList] = useState([])\r\n    const [exchangeName, setExchangeName] = useState('')\r\n\r\n    const { data, isFetching } = useGetExchangesQuery()\r\n\r\n    useEffect(() => {\r\n        const filteredData = data?.data?.exchanges.filter(exchange => exchange?.name?.toLowerCase().includes(exchangeName.toLowerCase()))\r\n        setExchangesList(filteredData)\r\n    }, [exchangeName, data])\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search Exchange\" onChange={(e) => setExchangeName(e.target.value)}></Input>\r\n            </div>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            {exchangesList?.map(ex => (\r\n                <Collapse>\r\n                    <Panel\r\n                        key={ex.id}\r\n                        showArrow={false}\r\n                        header={\r\n                            (\r\n                                <Row>\r\n                                    <Col span={6}>\r\n                                        <Text><strong>{ex.rank}.</strong></Text>\r\n                                        <Avatar className=\"exchange-image\" src={ex.iconUrl} />\r\n                                        <Text><strong>{ex.name}</strong></Text>\r\n                                    </Col>\r\n                                    <Col span={6}>{millify(ex.volume)}</Col>\r\n                                    <Col span={6}>{millify(ex.numberOfMarkets)}</Col>\r\n                                    <Col span={6}>{millify(ex.marketShare)}%</Col>\r\n                                </Row>\r\n                            )\r\n                        }>\r\n                        {HTMLReactParser(ex.description || 'There is no Data From This Exchange at the Moment!')}\r\n                    </Panel>\r\n                </Collapse>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n\r\n    const coinPrice = []\r\n    const coinTimestamp = []\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinPrice.push(coinHistory?.data?.history[i]?.price)\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i]?.timestamp).toLocaleDateString())\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price In USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title className=\"price-change\" level={5}>{coinHistory?.data?.change}%</Title>\r\n                    <Title className=\"current-price\" level={5}>Current {coinName} Price: $ {currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\r\nimport LineChart from './LineChart'\r\nimport Loader from './Loader'\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n\r\n    const { coinId } = useParams()\r\n\r\n    const [timePeriod, setTimePeriod] = useState('7d')\r\n\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod })\r\n\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    // const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y']; WTF ??? \r\n\r\n    const time = ['24h', '7d', '30d', '1y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title className=\"coin-name\" level={2}>{cryptoDetails.name} ({cryptoDetails.slug}) Price</Title>\r\n                <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimePeriod(value)}>\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n                    {HTMLReactParser(cryptoDetails.description)}\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n                    {cryptoDetails.links?.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">{link.type}</Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CryptoDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count)\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin?.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        setCryptos(filteredData)\r\n    }, [cryptosList, searchTerm])\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}></Input>\r\n                </div>\r\n            )}\r\n            <Row gutter={[24, 24]} className=\"crypto-card-container\">\r\n                {\r\n                    cryptos?.map(currency => (\r\n                        <Col xs={24} sm={12} lg={8} className=\"crypto-card\" key={currency.id}>\r\n                            <Link to={`/crypto/${currency.id}`}>\r\n                                <Card\r\n                                    title={`${currency.rank}. ${currency.name}`}\r\n                                    extra={<img className='crypto-image' alt={`${currency.name}`} src={currency.iconUrl}></img>}\r\n                                    hoverable>\r\n                                    <p>Price: {millify(currency.price)}</p>\r\n                                    <p>Maket Cap: {millify(currency.marketCap)}</p>\r\n                                    <p>Daily Change: {millify(currency.change)}%</p>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react'\r\nimport { Switch, Link, Route } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd'\r\n\r\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, News, CryptoDetails } from './components'\r\nimport './App.css';\r\n\r\nconst App = () => (\r\n    <div className=\"app\">\r\n        <div className=\"navbar\">\r\n            <Navbar />\r\n        </div>\r\n        <div className=\"main\">\r\n            <Layout>\r\n                <div className=\"routes\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Homepage />\r\n                        </Route>\r\n                        <Route exact path=\"/exchanges\">\r\n                            <Exchanges />\r\n                        </Route>\r\n                        <Route exact path=\"/cryptocurrencies\">\r\n                            <Cryptocurrencies />\r\n                        </Route>\r\n                        <Route exact path=\"/crypto/:coinId\">\r\n                            <CryptoDetails />\r\n                        </Route>\r\n                        <Route exact path=\"/news\">\r\n                            <News />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Layout>\r\n            <div className=\"footer\">\r\n                <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\r\n                    <Link to=\"/\">\r\n                        Cryptoland Inc.\r\n                    </Link> <br />\r\n                    All Rights Reserved.\r\n                </Typography.Title>\r\n                <Space>\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Space>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport { cryptoApi } from '../services/cryptoApi'\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from './App';\r\nimport 'antd/dist/antd.css';\r\nimport store from './app/store'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </Router>\r\n    </React.StrictMode >,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}